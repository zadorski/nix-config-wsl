{
    "name": "nix-wsl-dev-fallback-host-network",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".",
        "args": {},
        "cacheFrom": "ubuntu:24.04"
    },
    "runArgs": [
        "--network=host",
        "--memory=4g",
        "--cpus=2",
        "--init"
    ],
    "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",

    // host networking provides direct access to host SSH agent and certificates
    "containerEnv": {
        "GIT_USER_NAME": "${localEnv:GIT_USER_NAME:zadorski}",
        "GIT_USER_EMAIL": "${localEnv:GIT_USER_EMAIL:678169+zadorski@users.noreply.github.com}",
        
        // certificate environment variables (uses host certificates)
        "SSL_CERT_FILE": "/etc/ssl/certs/ca-certificates.crt",
        "NIX_SSL_CERT_FILE": "/etc/ssl/certs/ca-certificates.crt",
        "CURL_CA_BUNDLE": "/etc/ssl/certs/ca-certificates.crt",
        "REQUESTS_CA_BUNDLE": "/etc/ssl/certs/ca-certificates.crt",
        "NODE_EXTRA_CA_CERTS": "/etc/ssl/certs/ca-certificates.crt",
        "PIP_CERT": "/etc/ssl/certs/ca-certificates.crt",
        "CARGO_HTTP_CAINFO": "/etc/ssl/certs/ca-certificates.crt",
        "GIT_SSL_CAINFO": "/etc/ssl/certs/ca-certificates.crt",
        
        // development environment
        "EDITOR": "code",
        "VISUAL": "code",
        "PAGER": "less",
        "TERM": "xterm-256color",
        "COLORTERM": "truecolor",
        
        // nix configuration
        "NIXPKGS_ALLOW_UNFREE": "1",
        "NIX_CONFIG": "experimental-features = nix-command flakes"
    },

    // use devcontainer features for reliable base setup
    "features": {
        "ghcr.io/devcontainers/features/common-utils:2": {
            "installZsh": false,
            "configureZshAsDefaultShell": false,
            "username": "vscode",
            "userUid": "1000",
            "userGid": "1000"
        }
    },

    // lifecycle commands for setup (can be enabled after basic functionality works)
    "onCreateCommand": {
        "setupEnvironment": "bash -c 'echo \"ðŸš€ Setting up Nix development environment...\" && ./.devcontainer/scripts/setup-environment.sh'"
    },

    "postCreateCommand": {
        "validateEnvironment": "bash -c 'echo \"âœ… Running post-setup validation...\" && ./.devcontainer/scripts/validate-environment.sh'"
    },

    "postStartCommand": {
        "checkEnvironment": "bash -c 'echo \"ðŸ”„ Container started, checking environment...\" && ./.devcontainer/scripts/check-environment.sh'"
    },

    // container settings
    "shutdownAction": "stopContainer",
    "updateRemoteUserUID": true,
    "remoteUser": "vscode",

    // VS Code customizations
    "customizations": {
        "vscode": {
            "settings": {
                "terminal.integrated.defaultProfile.linux": "bash",
                "terminal.integrated.profiles.linux": {
                    "bash": {
                        "path": "/bin/bash",
                        "args": ["-l"]
                    }
                },
                "files.watcherExclude": {
                    "**/node_modules/**": true,
                    "**/.git/objects/**": true,
                    "**/.git/subtree-cache/**": true,
                    "**/nix/store/**": true,
                    "**/.devenv/**": true,
                    "**/.direnv/**": true
                },
                "remote.WSL.useShellEnvironment": true,
                "remote.WSL.fileWatcher.polling": false
            },
            "extensions": [
                "jnoortheen.nix-ide",
                "ms-vscode.vscode-json",
                "redhat.vscode-yaml"
            ]
        }
    }
}

# starship configuration for NixOS-WSL development environment
# streamlined, fast, and informative prompt design
# optimized for WSL2 performance with essential information only

# get editor completions based on the config schema
"$schema" = "https://starship.rs/config-schema.json"

# catppuccin mocha color palette for dark mode compatibility
# palette definition temporarily removed to resolve configuration conflicts
# using standard color names instead of custom palette references

# core prompt behavior: optimized for WSL performance
command_timeout = 500      # 500ms timeout for fast response
add_newline = false        # single-line prompt for efficiency
scan_timeout = 30          # quick directory scanning

# prompt format: clean left-side layout with essential information
format = """
$os\
$directory\
$git_branch\
$git_status\
$nix_shell\
$character"""

# right-side format: language versions and secondary information
right_format = """
$nodejs\
$python\
$rust\
$golang\
$cmd_duration"""

# OS icon: simple indicator for WSL context
[os]
format = "[$symbol]($style) "
style = "bold blue"
disabled = false

[os.symbols]
Windows = ""
Linux = ""

# directory display: clean path with intelligent truncation
[directory]
format = "[$path]($style) "
style = "bold blue"
truncation_length = 3
truncation_symbol = "‚Ä¶/"
truncate_to_repo = true
read_only = " üîí"
read_only_style = "red"

# git branch: simple branch name with icon
[git_branch]
format = "[$symbol$branch]($style) "
symbol = " "
style = "bold purple"
truncation_length = 20
truncation_symbol = "‚Ä¶"

# git status: essential status indicators only
[git_status]
format = '([$all_status$ahead_behind]($style) )'
style = "bold red"
ahead = "‚á°${count}"
behind = "‚á£${count}"
diverged = "‚áï‚á°${ahead_count}‚á£${behind_count}"
conflicted = "=${count}"
deleted = "‚úò${count}"
renamed = "¬ª${count}"
modified = "~${count}"
staged = "+${count}"
untracked = "?${count}"
stashed = "üì¶"

# nix shell indicator: critical for nix development
[nix_shell]
format = '[$symbol$state( \($name\))]($style) '
symbol = " "
style = "bold blue"
impure_msg = '[impure]'
pure_msg = '[pure]'
unknown_msg = '[nix]'

# character prompt: success/failure indicator
[character]
success_symbol = "[‚ùØ](bold green)"
error_symbol = "[‚ùØ](bold red)"
vimcmd_symbol = "[‚ùÆ](bold green)"

# command duration: show for long-running commands
[cmd_duration]
min_time = 2_000
format = "[$duration]($style) "
style = "bold yellow"

# language version displays: right-side, context-aware

# node.js: show when package.json present
[nodejs]
format = "[ $version]($style)"
style = "bold green"
detect_extensions = ["js", "mjs", "cjs", "ts", "tsx", "jsx"]
detect_files = ["package.json", ".nvmrc"]
detect_folders = ["node_modules"]

# python: show when in Python project
[python]
format = "[ $version]($style)"
style = "bold yellow"
detect_extensions = ["py"]
detect_files = ["requirements.txt", "pyproject.toml", "Pipfile", "__init__.py"]
detect_folders = [".venv", "venv", "env"]

# rust: show when Cargo.toml present
[rust]
format = "[ $version]($style)"
style = "bold red"
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]

# go: show when go.mod present
[golang]
format = "[ $version]($style)"
style = "bold cyan"
detect_extensions = ["go"]
detect_files = ["go.mod"]

# disabled modules for performance and cleanliness
[package]
disabled = true

[docker_context]
disabled = true

[kubernetes]
disabled = true

[aws]
disabled = true

[gcloud]
disabled = true

[hostname]
disabled = true

[username]
disabled = true

[time]
disabled = true

[battery]
disabled = true

[memory_usage]
disabled = true

[jobs]
disabled = true

[status]
disabled = true

# environment variables: minimal, essential only
[env_var.DEVENV_PROFILE]
format = "(devenv:[$env_value]($style) )"
style = "bold blue"

# custom modules disabled for performance
# note: [custom] section removed as it expects specific custom command configurations
# individual custom commands can be disabled by not defining them
